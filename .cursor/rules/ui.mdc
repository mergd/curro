---
description: 
globs: 
alwaysApply: true
---
!! Use shadcn color tokens where possible, and then if needed use tailwind colors. No need for dark mode for now.

Use radix-ui/themes components first and if they do't exist, use the shadcn component.


With radix buttons though - add cursor-pointer to the className.

Don't use namespace import usage with React in particular, use the destructured import.

Try not to add Loading... - and use a real skeleton for loading states.

Use cards to keep visual displays consistent - more broadly using a lot of tailwind to style something is an antipattern.
This is because makes the code less readable – so try to not add too many classes, or add it directly to the component if necessary.


Do not use raw fetch – use tanstack query, and if it's commonly used, put it in the use folder

Make small/mobile display friendly – and a big tighter on spacing/compactness


Make sure to properly escape punctuation (i.e. ' to &apos; where needed)

When needed, use framer motion animations to make things delightful.


## Misc

### Tables

Rows should generally be clickable, especially if there is information tucked into a responsive sheet

### Forms

Use react-hook-form, form components from the ui/form isntead of using say raw labels and inputs. For fields that have dynamic validation - (i.e. iban, or fields that pull from the shadcn) - use the validated-input component.

For multistep form, I have a flushed out workflow-form that can be used. Refer to the README in the folder on how it's best used. Please add type='button' to buttons inside forms that aren't meant to be next buttons since it triggers the next page state.

For address input, I also have an address-input component that should be used.


For currencies or countries, I have comboboxes that should be used here.

## shadcn
If you need to add new components, use `npx shadcn@latest add $component_name`


If it's a component that is specific to a page and isn't general, include it in the same folder as opposed to adding it to the components folder and cluttering it up – a good example is a skeleton component


## Icons:
Prefer Phosphor Icons over lucide, but make sure to add 'Icon' (i.e. GearIcon instead of Gear - as normal imports are deprecated). If the component is server side, import it from 'dist/ssr'
